version: '3.8'

services:

  app:
    image: "laratest/app:${TAG:-latest}"
    build:
      args:
        user: testusr
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    container_name: test-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - test-network

  web:
    image: nginx:1.19.4
    container_name: test-nginx
    restart: unless-stopped
    ports:
      - ${SERVER_PORT:-80}:80
      - 443:443
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d/
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    networks:
      - test-network

  certbot:
    image: certbot/certbot
    container_name: test-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt/:rw
      - ./certbot/www:/var/www/certbot/:rw
    entrypoint: >
      sh -c "trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;"
    restart: unless-stopped
    depends_on:
      - web
    networks:
      - test-network

  pgsql:
    image: postgres:9.6
    container_name: test-pgsql
    restart: unless-stopped
    expose:
      - 5432
    ports:
      - ${DB_PORT:-5432}:5432
    volumes:
      - dbpgsql:/docker-entrypoint-initdb.d/
    environment:
      POSTGRES_USER: ${DB_USERNAME:-homestead}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
      POSTGRES_DB: ${DB_DATABASE:-homestead}
    networks:
      - test-network

  adminer:
    image: adminer
    restart: always
    ports:
      - ${ADMINER_PORT_DB:-8080}:8080
    environment:
      - ADMINER_DEFAULT_SERVER=pgsql
      - ADMINER_DESIGN=price
    networks:
      - test-network

  mailhog:
    image: mailhog/mailhog
    logging:
      driver: "none"
    ports:
      - ${MAIL_PORT:-1025}:1025
      - ${MAILHOG_PORT:-8025}:8025
    networks:
      - test-network

  samba:
    image: dperson/samba
    container_name: test-samba
    restart: unless-stopped
    environment:
      USERID: 1000
      GROUPID: 1000
      SAMBA_USER: testusr
      SAMBA_PASSWORD: testpass
    volumes:
      - ./:/mount
    ports:
      - 1139:139
      - 1445:445
    command: "-s 'public;/mount;yes;no;yes;all;none'"
    networks:
      - test-network

networks:
  test-network:
    driver: bridge

volumes:
  dbpgsql:

